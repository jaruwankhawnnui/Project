"use client";
import React, { useEffect, useState } from "react";
import Headeradmin from '@/components/Headeradmin';
import { Bar } from "react-chartjs-2";
import "chart.js/auto";

const BorrowSummaryPage = () => {
  const [borrowSummary, setBorrowSummary] = useState({});
  const [inventoryData, setInventoryData] = useState({});
  const [years, setYears] = useState([]);
  const [selectedYear, setSelectedYear] = useState("");
  const [totalBorrowed, setTotalBorrowed] = useState(0);
  const [totalReturned, setTotalReturned] = useState(0);
  const [loading, setLoading] = useState(true);
  const [error, setError] = useState(null);

  useEffect(() => {
    const fetchData = async () => {
      try {
        const [borrowRes, inventoryRes] = await Promise.all([
          fetch("http://172.31.0.1:1337/api/borrows"),
          fetch("http://172.31.0.1:1337/api/cartadmins")
        ]);

        if (!borrowRes.ok || !inventoryRes.ok) {
          throw new Error("Failed to fetch data");
        }

        const borrowData = await borrowRes.json();
        const inventoryData = await inventoryRes.json();
        const borrows = borrowData.data;
        const inventoryItems = inventoryData.data;

        // ‚úÖ ‡∏î‡∏∂‡∏á‡∏õ‡∏µ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        const yearList = [...new Set(borrows.map((borrow) => borrow.attributes.Year || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏õ‡∏µ"))];
        setYears(yearList);

        // ‚úÖ ‡∏à‡∏±‡∏î‡∏Å‡∏•‡∏∏‡πà‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏ï‡∏≤‡∏°‡∏õ‡∏µ
        const groupedBorrowData = borrows.reduce((acc, borrow) => {
          const year = borrow.attributes.Year || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏õ‡∏µ";
          const label = borrow.attributes.label || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå";
          const amount = borrow.attributes.amount || 0;
          const isReturned = borrow.attributes.status === "‡∏Ñ‡∏∑‡∏ô‡πÅ‡∏•‡πâ‡∏ß";

          if (!acc[year]) {
            acc[year] = { borrowed: {}, returned: {} };
          }
          if (!acc[year].borrowed[label]) {
            acc[year].borrowed[label] = 0;
          }
          if (!acc[year].returned[label]) {
            acc[year].returned[label] = 0;
          }

          if (isReturned) {
            acc[year].returned[label] += amount;
          } else {
            acc[year].borrowed[label] += amount;
          }

          return acc;
        }, {});

        setBorrowSummary(groupedBorrowData);

        // ‚úÖ ‡∏à‡∏±‡∏î‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏±‡πâ‡∏á‡∏´‡∏°‡∏î
        const inventoryMap = inventoryItems.reduce((acc, item) => {
          const label = item.attributes.Label || "‡πÑ‡∏°‡πà‡∏£‡∏∞‡∏ö‡∏∏‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå";
          const total = item.attributes.item || 0;
          acc[label] = total;
          return acc;
        }, {});

        setInventoryData(inventoryMap);
      } catch (error) {
        setError(error.message);
      } finally {
        setLoading(false);
      }
    };

    fetchData();
  }, []);

  // ‚úÖ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏¢‡∏∑‡∏°‡πÅ‡∏•‡∏∞‡∏Ñ‡∏∑‡∏ô‡πÄ‡∏â‡∏û‡∏≤‡∏∞‡∏õ‡∏µ‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å
  useEffect(() => {
    if (selectedYear && borrowSummary[selectedYear]) {
      const totalForSelectedYear = Object.values(borrowSummary[selectedYear].borrowed || {}).reduce((sum, num) => sum + num, 0);
      const totalReturnedForSelectedYear = Object.values(borrowSummary[selectedYear].returned || {}).reduce((sum, num) => sum + num, 0);

      setTotalBorrowed(totalForSelectedYear);
      setTotalReturned(totalReturnedForSelectedYear);
    } else {
      setTotalBorrowed(0);
      setTotalReturned(0);
    }
  }, [selectedYear, borrowSummary]);

  // ‚úÖ ‡πÄ‡∏ï‡∏£‡∏µ‡∏¢‡∏°‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö‡∏Å‡∏£‡∏≤‡∏ü
  const chartData = {
    labels: selectedYear ? Object.keys(borrowSummary[selectedYear]?.borrowed || {}) : [],
    datasets: [
      {
        label: "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏¢‡∏∑‡∏° (‡∏ä‡∏¥‡πâ‡∏ô)",
        data: selectedYear ? Object.values(borrowSummary[selectedYear]?.borrowed || {}) : [],
        backgroundColor: "rgba(54, 162, 235, 0.6)",
        borderColor: "rgba(54, 162, 235, 1)",
        borderWidth: 1,
      },
      {
        label: "‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏ó‡∏µ‡πà‡∏Ñ‡∏∑‡∏ô‡πÅ‡∏•‡πâ‡∏ß (‡∏ä‡∏¥‡πâ‡∏ô)",
        data: selectedYear ? Object.values(borrowSummary[selectedYear]?.returned || {}) : [],
        backgroundColor: "rgba(75, 192, 192, 0.6)",
        borderColor: "rgba(75, 192, 192, 1)",
        borderWidth: 1,
      },
    ],
  };

  return (
    <div className="bg-gray-100 min-h-screen">
      <Headeradmin>
        <div className="container mx-auto mt-10">
          <h1 className="text-4xl font-bold text-center mb-10">üìä ‡∏™‡∏£‡∏∏‡∏õ‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏°‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ï‡∏≤‡∏°‡∏õ‡∏µ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤</h1>

          {loading ? (
            <p className="text-center text-gray-500">‡∏Å‡∏≥‡∏•‡∏±‡∏á‡πÇ‡∏´‡∏•‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•...</p>
          ) : error ? (
            <p className="text-center text-red-500">‡πÄ‡∏Å‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏ú‡∏¥‡∏î‡∏û‡∏•‡∏≤‡∏î: {error}</p>
          ) : (
            <div className="bg-white shadow-lg rounded-lg p-6">
              <h2 className="text-2xl font-bold mb-6">‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏µ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤</h2>

              {/* ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏¢‡∏≠‡∏î‡∏£‡∏ß‡∏°‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏¢‡∏∑‡∏°‡πÅ‡∏•‡∏∞‡∏Ñ‡∏∑‡∏ô‡πÅ‡∏•‡πâ‡∏ß */}
              <div className="flex justify-center bg-blue-200 p-4 mb-6 rounded-md text-lg font-semibold">
                <div className="mr-6">üìå ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡∏¢‡∏∑‡∏°‡πÉ‡∏ô‡∏õ‡∏µ {selectedYear || "‡∏ó‡∏µ‡πà‡πÄ‡∏•‡∏∑‡∏≠‡∏Å"}: {totalBorrowed} ‡∏ä‡∏¥‡πâ‡∏ô</div>
                <div>‚úÖ ‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå‡∏ó‡∏µ‡πà‡∏Ñ‡∏∑‡∏ô‡πÅ‡∏•‡πâ‡∏ß: {totalReturned} ‡∏ä‡∏¥‡πâ‡∏ô</div>
              </div>

              {/* ‚úÖ ‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏µ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤ */}
              <div className="flex justify-center mb-6">
                <select
                  className="border p-2 rounded-md shadow-md"
                  value={selectedYear}
                  onChange={(e) => setSelectedYear(e.target.value)}
                >
                  <option value="">-- ‡∏Å‡∏£‡∏∏‡∏ì‡∏≤‡πÄ‡∏•‡∏∑‡∏≠‡∏Å‡∏õ‡∏µ‡∏Å‡∏≤‡∏£‡∏®‡∏∂‡∏Å‡∏©‡∏≤ --</option>
                  {years.map((year, index) => (
                    <option key={index} value={year}>{year}</option>
                  ))}
                </select>
              </div>

              {/* ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏Å‡∏£‡∏≤‡∏ü */}
              <div className="bg-white p-6 shadow-md rounded-lg mb-6">
                <h2 className="text-2xl font-bold mb-4">üìà ‡∏™‡∏ñ‡∏¥‡∏ï‡∏¥‡∏Å‡∏≤‡∏£‡∏¢‡∏∑‡∏°‡πÅ‡∏•‡∏∞‡∏Ñ‡∏∑‡∏ô‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå</h2>
                <Bar data={chartData} />
              </div>

              {/* ‚úÖ ‡πÅ‡∏™‡∏î‡∏á‡∏ï‡∏≤‡∏£‡∏≤‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• */}
              <div className="bg-white shadow-md rounded-lg p-6">
                <h2 className="text-2xl font-bold mb-4">üìã ‡∏£‡∏≤‡∏¢‡∏Å‡∏≤‡∏£‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå</h2>
                <table className="w-full border border-gray-300 text-center">
                  <thead className="bg-gray-100">
                    <tr>
                      <th className="border p-2">‡∏ä‡∏∑‡πà‡∏≠‡∏≠‡∏∏‡∏õ‡∏Å‡∏£‡∏ì‡πå</th>
                      <th className="border p-2">‡∏¢‡∏∑‡∏°‡πÑ‡∏õ</th>
                      <th className="border p-2">‡∏Ñ‡∏∑‡∏ô‡πÅ‡∏•‡πâ‡∏ß</th>
                      <th className="border p-2">‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠</th>
                    </tr>
                  </thead>
                  <tbody>
                    {selectedYear && Object.entries(borrowSummary[selectedYear]?.borrowed || {}).map(([label, borrowed], index) => {
                      const total = inventoryData[label] || 0;
                      const returned = borrowSummary[selectedYear]?.returned[label] || 0;
                      const remaining = total - borrowed + returned; // ‚úÖ ‡∏Ñ‡∏≥‡∏ô‡∏ß‡∏ì‡∏à‡∏≥‡∏ô‡∏ß‡∏ô‡∏Ñ‡∏á‡πÄ‡∏´‡∏•‡∏∑‡∏≠
                      return (
                        <tr key={index}>
                          <td className="border p-2">{label}</td>
                          <td className="border p-2">{borrowed} ‡∏ä‡∏¥‡πâ‡∏ô</td>
                          <td className="border p-2">{returned} ‡∏ä‡∏¥‡πâ‡∏ô</td>
                          <td className="border p-2">{remaining} ‡∏ä‡∏¥‡πâ‡∏ô</td>
                        </tr>
                      );
                    })}
                  </tbody>
                </table>
              </div>
            </div>
          )}
        </div>
      </Headeradmin>
    </div>
  );
};

export default BorrowSummaryPage;
